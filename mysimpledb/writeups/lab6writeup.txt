Report for Lab 6
----------------

Exercise 1.

1. Briefly explain how logging is done in SimpleDB by describing when log records are written to the log.  Use Eclipse search tools to find all uses of the LogFile methods in the SimpleDB source code.

	preAppend - called in LogFile.logAbort, .lockCheckpoint, .logCLR, .logCommit,
				.logWrite, .logXactionBegin)
	checkActive doesn't do anything
    logXaction - Transaction.start
    logCommit - Transaction.transactionComplete
    logAbort(TransactionId tid) *excluding tests - Transaction.transactionComplete
    logAbort(Long tid) - not called
    logWrite - called in BufferPool.flushPage 
    logCLR(TransactionId tid, Page after) - not called
    logCLR(Long tid, Page after) - called in other logCLR
    writePageData - LogFile.logCLR(Long, Page), LogFile.logWrite
    readPageData - LogFile.logFileRecovery.print
    logCheckpoint - LogFile.shutdown, 3 tests
    logTruncate - LogFile.logCheckpoint
    shutdown - not called
    recover - only called in a systemtest
    force - BufferPool.flushPage, LogFile.logAbort, LogFile.logCheckpoint, LogFile.logCommit
   
    Records are written to the log when the BufferPool flushes pages. This is the force policy. 

2. Where is LogFile.force called?  You should include usages inside other LogFile methods.  For each usage, why is it important that force is called?

    It is called in:
    BufferPool.flushPage: Before the BufferPool flushes actual data, it flushes the log file
    LogFile.logAbort: If a transaction aborts, the log file must indicate that it did
    LogFile.logCheckpoint: At a checkpoint, we must push everything to disk, including the log file. 
    LogFile.logCommit: If a transaction commits, the log file must indicated that it commited
    


3. Where is setBeforeImage image called?  

    BufferPool.transactionComplete. if the transaction is committing, we set the before image to the image we just committed
    It's also set in the HeapPage constructor. 
    

Exercise 4.

In answering the next few questions, oncy include method calls in the source code; method calls in the test code can be ignored.

4. Where is BufferPool.flushPage called?  
    
    <Replace this text with your answer>

5. Where is BufferPool.flushPages(tid) called?

    <Replace this text with your answer>

6. Where is BufferPool.flushAllPages called?

    <Replace this text with your answer>

7. To support a NO FORCE, STEAL policy, describe exactly when/where pages should be flushed to disk.

    <Replace this text with your answer>


After you complete the lab, please answer the following questions.  

8. What is your name?  If you work with a partner, be sure to write both of your names.

    <Replace this text with your answer>

9. What did you think of this assignment?

    <Replace this text with your answer>

10. What was the hardest part of this assignment?

    <Replace this text with your answer>

11. Describe any missing or incomplete elements of your code.

    <Replace this text with your answer>

12. Roughly how long did you spend working on this lab?

    <Replace this text with your answer>

